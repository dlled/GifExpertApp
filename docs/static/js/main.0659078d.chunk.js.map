{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GrifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","data_url","images","downsized_medium","GifGridItem","className","src","alt","GrifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,OAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAoB1C,OACI,mCACI,sBACIC,SAdS,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACrCN,EAAc,IACdO,QAAQC,IAAIN,KAOZ,SAGI,uBACIO,KAAK,OACLC,MAAOX,EACPY,SAxBU,SAACT,GAEvBF,EAAcE,EAAEU,OAAOF,e,uBCahBG,EAtBF,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEE,GACE,mCACVC,EAJM,iDAI0CF,EAJ1C,kBAEE,GAFF,oBAGI,oCAHJ,SAMOG,MAAMD,GANb,cAMNE,EANM,gBAQOA,EAAKC,OARZ,cAQNC,EARM,OAUNC,EAAOD,EAAKA,KAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC9B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,SAAQ,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBZ,QAdnC,kBAkBLK,GAlBK,4CAAH,sDCaEQ,EAXY,SAAC,GAAW,IAAVN,EAAS,EAATA,IAIzB,OAFAhB,QAAQC,IAAIe,GAGR,qBAAKO,UAAU,yCAAf,SACI,qBAAKC,IAAKR,EAAIG,SAAUD,MAAOF,EAAIE,MAAOO,IAAKT,EAAIE,WCHlDQ,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAd,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA0BxC,OAnBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAACpB,IASGqB,EDtBiBK,CAAa1B,GAA9BM,EAJ+B,EAI/BA,KAAMc,EAJyB,EAIzBA,QAQb,OAAQ,qCACA,mCAAMpB,EAAN,OAEEoB,EAAU,WAAY,mBAC5B,qBAAKJ,UAAU,gDAAf,SAEQV,EAAKE,KAAI,SAACC,GAAD,OACL,cAAC,EAAD,CAEIA,IAAKA,GADAA,EAAIC,aErBpBiB,EAAe,WAAO,IAAD,EAEE3C,mBAAS,IAFX,mBAEvBgB,EAFuB,KAEbjB,EAFa,KAS9B,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,YAAaA,IAC1B,uBAKQiB,EAASQ,KAAI,SAACR,GAAD,OACT,cAAC,EAAD,CAEIA,SAAUA,GADLA,U,MCnBjC4B,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,W","file":"static/js/main.0659078d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategory}) => {\n\n    const [inputValue, setInputValue] = useState('...');\n\n    const handleInputChange = (e) => {\n        // console.log(e.target.value)\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 0){\n            setCategory(cats => [ inputValue, ...cats])\n            setInputValue('');\n            console.log(e);\n        }\n\n    }\n\n    return (\n        <>\n            <form \n                onSubmit = {handleSubmit}\n            >\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                ></input>\n            </form>\n\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n","const getGifs = async (category) => {\n\n    const limit = 10\n    const api_key = 'ysTN3tuvRru8KILGO1LINWOvWtxQchHT'\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=${limit}&api_key=${api_key}`\n\n    const resp = await fetch(url);\n\n    const data = await resp.json();\n\n    const gifs = data.data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            data_url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n\n}\n\nexport default getGifs;","import React from 'react'\n\nexport const GifGridItem = ({img}) => {\n\n    console.log(img);\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={img.data_url} title={img.title} alt={img.title}/>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import getGifs from '../helpers/getGifs';\nimport GifGridItem from './GifGridItem';\n\nexport const GrifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n    const {data, loading} = useFetchGifs(category);\n\n    // useEffect(() => {\n    //     getGifs(category).then(setImages);\n    // }, [category])\n\n\n\n    return (<>\n            <h3> {category} </h3>\n\n            { loading ? 'Cargando': 'Carga completada'}\n        <div className=\"card-grid  animate__animated animate__fadeIn \">\n            {\n                data.map((img) => (\n                    <GifGridItem\n                        key={img.id}\n                        img={img} />\n                ))\n            }\n        </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        \n        getGifs(category)\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n\n    }, [category])\n\n    // setTimeout(() => {\n    //     setstate({\n    //         data: [0,1,2,3,4,5,6],\n    //         loading: false\n    //     })\n    // }, 3000);\n\n    return state;\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GrifGrid } from './components/GrifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [category, setCategory] = useState([])\n\n\n\n    // const handleAdd = () => {\n    //     setCategory( [...category, 'New Categoryx']);\n    // }\n    return (\n        <>\n            <h2> GIF EXPERT APP </h2>\n            <AddCategory setCategory={setCategory} />\n            <hr></hr>\n\n            {/* <button onClick={handleAdd}> Add new category </button> */}\n\n                {\n                    category.map((category) => \n                        <GrifGrid\n                            key={category}\n                            category={category}\n                        />\n                    )\n                }\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}